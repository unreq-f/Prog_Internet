from records.storage_class import Storage
from logger.loger import log_action, log_error, log_warning

def show_menu(storage=None):

    # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç —Ö—Ä–∞–Ω–∏–ª–∏—â–∞, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç (–ø—Ä–∏ –ø–µ—Ä–≤–æ–º –≤—ã–∑–æ–≤–µ)
    if storage is None:
        storage = Storage()

    print("\n–ú–µ–Ω—é:")
    print("1. –î–æ–±–∞–≤–∏—Ç—å –∑–∞–ø–∏—Å—å")
    print("2. –£–¥–∞–ª–∏—Ç—å –∑–∞–ø–∏—Å—å")
    print("3. –ò–∑–º–µ–Ω–∏—Ç—å –∑–∞–ø–∏—Å—å")
    print("4. –ü–æ–∫–∞–∑–∞—Ç—å –≤–µ–¥–æ–º–æ—Å—Ç—å")
    print("5. –í—ã–π—Ç–∏")

    choice = input("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: ").strip()

    if choice == "1":
        try:
            student_f = input("–í–≤–µ–¥–∏—Ç–µ –§–ò–û —Å—Ç—É–¥–µ–Ω—Ç–∞: ").strip()
            if not student_f:
                raise ValueError("–ö–æ–ª–æ–Ω–∫–∞ –§–ò–û –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç–æ–π.")

            missedh = int(input("–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã—Ö —á–∞—Å–æ–≤: ").strip())
            if missedh < 0:
                raise ValueError("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∞—Å–æ–≤ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º.")

            valid_reason_h = int(input("–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–ø—Ä–∞–≤–¥–∞–Ω–Ω—ã—Ö —á–∞—Å–æ–≤: ").strip())
            if valid_reason_h < 0 or valid_reason_h > missedh:
                raise ValueError("–û–ø—Ä–∞–≤–¥–∞–Ω–Ω—ã–µ —á–∞—Å—ã –Ω–µ –º–æ–≥—É—Ç –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º–∏ –∏–ª–∏ –±–æ–ª—å—à–µ –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã—Ö.")

            storage.add_record(student_f, missedh, valid_reason_h)
            print("‚úÖ –ó–∞–ø–∏—Å—å –¥–æ–±–∞–≤–ª–µ–Ω–∞.")
            log_action(f"–î–æ–±–∞–≤–ª–µ–Ω–∞ –∑–∞–ø–∏—Å—å: {student_f}, –ø—Ä–æ–ø—É—â–µ–Ω–æ {missedh}, –æ–ø—Ä–∞–≤–¥–∞–Ω–æ {valid_reason_h}")

        except ValueError as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
            log_error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∑–∞–ø–∏—Å–∏: {e}")

        show_menu(storage)  # –†–µ–∫—É—Ä—Å–∏–≤–Ω—ã–π –≤—ã–∑–æ–≤

    elif choice == "2":
        if not storage.storage_list:
            print("‚ö†Ô∏è –í–µ–¥–æ–º–æ—Å—Ç—å –ø—É—Å—Ç–∞, —É–¥–∞–ª—è—Ç—å –Ω–µ—á–µ–≥–æ.")
            log_warning("–ü–æ–ø—ã—Ç–∫–∞ —É–¥–∞–ª–∏—Ç—å –∑–∞–ø–∏—Å—å, –Ω–æ –≤–µ–¥–æ–º–æ—Å—Ç—å –ø—É—Å—Ç–∞.")
        else:
            storage.display_table()
            try:
                index = int(input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∑–∞–ø–∏—Å–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è: ").strip()) - 1
                removed_record = storage.storage_list[index]
                storage.remove_record(index)
                print("‚úÖ –ó–∞–ø–∏—Å—å —É–¥–∞–ª–µ–Ω–∞.")
                log_action(f"–£–¥–∞–ª–µ–Ω–∞ –∑–∞–ø–∏—Å—å –ø–æ–¥ –Ω–æ–º–µ—Ä–æ–º {index}: {removed_record.student_f}, –ø—Ä–æ–ø—É—â–µ–Ω–æ {removed_record.missedh}, –æ–ø—Ä–∞–≤–¥–∞–Ω–æ {removed_record.valid_reason_h}")
            except IndexError:
                print("‚ùå –û—à–∏–±–∫–∞: –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä –∑–∞–ø–∏—Å–∏.")
                log_error("–û—à–∏–±–∫–∞ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∏–Ω–¥–µ–∫—Å")

        show_menu(storage)  # –†–µ–∫—É—Ä—Å–∏–≤–Ω—ã–π –≤—ã–∑–æ–≤


    elif choice == "3":

        if not storage.storage_list:

            print("‚ö†Ô∏è –í–µ–¥–æ–º–æ—Å—Ç—å –ø—É—Å—Ç–∞, –∏–∑–º–µ–Ω—è—Ç—å –Ω–µ—á–µ–≥–æ.")
            log_warning("–ü–æ–ø—ã—Ç–∫–∞ –∏–∑–º–µ–Ω–∏—Ç—å –∑–∞–ø–∏—Å—å, –Ω–æ –≤–µ–¥–æ–º–æ—Å—Ç—å –ø—É—Å—Ç–∞.")


        else:

            storage.display_table()

            try:

                index = int(input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∑–∞–ø–∏—Å–∏ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è: ").strip()) - 1

                if index < 0 or index >= len(storage.storage_list):
                    raise IndexError("–ó–∞–ø–∏—Å–∏ —Å —Ç–∞–∫–∏–º –Ω–æ–º–µ—Ä–æ–º –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")


                student_f = input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –§–ò–û —Å—Ç—É–¥–µ–Ω—Ç–∞: ").strip()

                if not student_f:
                    raise ValueError("–ö–æ–ª–æ–Ω–∫–∞ –§–ò–û –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç–æ–π.")

                missedh = int(input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã—Ö —á–∞—Å–æ–≤: ").strip())

                if missedh < 0:
                    raise ValueError("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∞—Å–æ–≤ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º.")

                valid_reason_h = int(input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–ø—Ä–∞–≤–¥–∞–Ω–Ω—ã—Ö —á–∞—Å–æ–≤: ").strip())

                if valid_reason_h < 0 or valid_reason_h > missedh:
                    raise ValueError("–û–ø—Ä–∞–≤–¥–∞–Ω–Ω—ã–µ —á–∞—Å—ã –Ω–µ –º–æ–≥—É—Ç –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º–∏ –∏–ª–∏ –±–æ–ª—å—à–µ –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã—Ö.")

                old_record = storage.storage_list[index]
                storage.update_record(index, student_f, missedh, valid_reason_h)
                print("‚úÖ –ó–∞–ø–∏—Å—å –æ–±–Ω–æ–≤–ª–µ–Ω–∞.")
                log_action(f"–ò–∑–º–µ–Ω–µ–Ω–∞ –∑–∞–ø–∏—Å—å –ø–æ–¥ –Ω–æ–º–µ—Ä–æ–º {index} : {old_record.student_f} -> {student_f}, {old_record.missedh} -> {missedh}, {old_record.valid_reason_h} -> {valid_reason_h}")


            except ValueError as e:
                print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
                log_error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∑–∞–ø–∏—Å–∏: {e}")

            except IndexError as e:
                print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
                log_error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∑–∞–ø–∏—Å–∏: {e}")

        show_menu(storage)  # –†–µ–∫—É—Ä—Å–∏–≤–Ω—ã–π –≤—ã–∑–æ–≤

    elif choice == "4":
        if not storage.storage_list:
            print("‚ö†Ô∏è –í–µ–¥–æ–º–æ—Å—Ç—å –ø—É—Å—Ç–∞.")
            log_warning("–ü–æ–ø—ã—Ç–∫–∞ –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å –≤–µ–¥–æ–º–æ—Å—Ç—å, –Ω–æ –æ–Ω–∞ –ø—É—Å—Ç–∞.")
        else:
            storage.display_table()
            log_action("–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∞ –≤–µ–¥–æ–º–æ—Å—Ç—å")

        show_menu(storage)  # –†–µ–∫—É—Ä—Å–∏–≤–Ω—ã–π –≤—ã–∑–æ–≤

    elif choice == "5":
        print("üëã –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã.")
        log_action("–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –ø—Ä–æ–≥—Ä–∞–º–º—ã")
    else:
        print("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
        log_warning(f"–í–≤–µ–¥–µ–Ω–∞ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∞—è –æ–ø—Ü–∏—è: {choice}")
        show_menu(storage)  # –†–µ–∫—É—Ä—Å–∏–≤–Ω—ã–π –≤—ã–∑–æ–≤

